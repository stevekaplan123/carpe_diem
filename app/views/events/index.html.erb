<style>
body {
    font-family:Arial;
    font-size:12px;
}

/* We remove the margin, padding, and list style of UL and LI components */
#menuwrapper ul, #menuwrapper ul li{
    margin:0;
    padding:0;
    list-style:none;
}

/* We apply background color and border bottom white and width to 150px */
#menuwrapper ul li{
    background-color:#7f95db;
    border-bottom:solid 1px white;
    width:150px;
    cursor:pointer;
}

/* We apply the background hover color when user hover the mouse over of the li component */
#menuwrapper ul li:hover{
    background-color:#6679e9;
    position:relative;
}

/* We apply the link style */
#menuwrapper ul li a{
    padding:5px 15px;
    color:#ffffff;
    display:inline-block;
    text-decoration:none;
}

/**** SECOND LEVEL MENU ****/
/* We make the position to absolute for flyout menu and hidden the ul until the user hover the parent li item */
#menuwrapper ul li ul{
    position:absolute;
    display:none;
}

/* When user has hovered the li item, we show the ul list by applying display:block, note: 150px is the individual menu width.  */
#menuwrapper ul li:hover ul{
    left:150px;
    top:0px;
    display:block;
}

/* we apply different background color to 2nd level menu items*/
#menuwrapper ul li ul li{
    background-color:#cae25a;
}

/* We change the background color for the level 2 submenu when hovering the menu */
#menuwrapper ul li:hover ul li:hover{
    background-color:#b1b536;
}


/* We style the color of level 2 links */
#menuwrapper ul li ul li a{
    color:#454444;
    display:inline-block;
    width:120px;
}


/* Clear float */
.clear{
    clear:both;
}
</style>


<script type='text/javascript' src="https://maps.googleapis.com/maps/api/js?sensor=false"></script>
    <script type='text/javascript'>
        //the following function causes page to refresh
        (function()
        {
          if( window.localStorage )
          {
            if( !localStorage.getItem( 'firstLoad' ) )
            {
              localStorage[ 'firstLoad' ] = true;
              window.location.reload()
            }  
            else
              localStorage.removeItem( 'firstLoad' );
          }
        })();


        var gMap = null;
        var attendance_window = null;
        var desc_window = null;
        var markers = [];
        var me_window =  null; 
        var loc = null;
        var windows = [];
        var tag = null;
        var attendances = []


        
        window.onload = function(){
           
            var myOptions = {
                center: new google.maps.LatLng(42.3654347, -71.258595),
                zoom: 15,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            gMap = new google.maps.Map(document.getElementById('map_canvas'), myOptions);

            loadAttendances()

            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(success, error); 

            } else { 
                error();
            }
            
       }


        function loadXMLDoc(type)
        {          
          if (loc=="error") //if loc error and no value set on map
          {
              alert("In order to see events near you, either allow geolocation on your browser or select your position on the map.")
          }
          //first just gets the right xmlhttp based on browser
            var xmlhttp = loadXMLHTTP()
            //each time state changes, from 0 to 1 to 2 to 3 to 4, check if it finished (finished means state of 4)
            //and check status is 200, if status != 200, then the server failed to respond correctly (404 or 500)  
            xmlhttp.onreadystatechange=function()
              {
              if (xmlhttp.readyState==4 && xmlhttp.status==200)
                {
                  //first clear old event markers and clear out table of events
                  clearMarkers()
                  clearWindows()

                  //clear out the old list of events
                  document.getElementById("below_menu").innerHTML = ""

                    //now show the filtered events
                    result = JSON.parse(xmlhttp.responseText);
                    length = result.length;
                    for (i=0; i<length; i++)
                    {
                        latitude=JSON.parse(xmlhttp.responseText)[i]["latitude"];
                        longitude=JSON.parse(xmlhttp.responseText)[i]["longitude"];
                        var event_id = JSON.parse(xmlhttp.responseText)[i]["id"].toString();
                        var event_name=JSON.parse(xmlhttp.responseText)[i]["event_name"];
                        var creator_id=JSON.parse(xmlhttp.responseText)[i]["creator_id"];
 
                        //mark events on map that were result of filtering by 'type'
                        markEvents(latitude, longitude, event_name)

                        //repopulate the navigation bar with the events filtered by 'type'
                        document.getElementById("below_menu").innerHTML += eventHTML(event_id, creator_id, xmlhttp) 
                    }    

                }
              }
              xmlhttp.open("GET","/events/filter.json?type="+type+"&location="+loc+"&tag="+tag,true);
              xmlhttp.send();
          }


        function success(position) {
           document.getElementById("locationDiv").innerHTML = position.coords.latitude + ", " + position.coords.longitude; 
           loc = document.getElementById("locationDiv").innerHTML.split(", ")
           tag = ""
           var latitude = loc[0]
           var longitude = loc[1]
           markMe(latitude, longitude)
           loadXMLDoc("location")  //by default load events near user's locaton

         }
         function error()
         {
            document.getElementById("locationDiv").innerHTML = "error"
            loc = "error"

            //user needs to be able to click on map
            google.maps.event.addListener(gMap, 'click', function(event) {
                var lat = event.latLng.lat()
                var lng = event.latLng.lng()
                loc = lat.toString() + ", " + lng.toString()
                markMe(lat, lng)
            });
            loadXMLDoc("user")
         }


        function loadAttendances()
        {
          var event_id;
          <% current_user.attendances.each do |attending| %>
               event_id = '<%= attending['event_id'] %>'
               attendances.push(event_id)
          <% end %>
        }


        function loadXMLHTTP()
        {
          var xmlhttp;
           if (window.XMLHttpRequest)
              {// code for IE7+, Firefox, Chrome, Opera, Safari
              xmlhttp=new XMLHttpRequest();
              }
            else
              {// code for IE6, IE5
              xmlhttp=new ActiveXObject("Microsoft.XMLHTTP");
              }
          return xmlhttp;
        }

        function markMe(latitude, longitude)
        {
            if (me_window != null)
            {
                me_window.close()
            }
            me_window = new google.maps.InfoWindow({
                content: "You are here",
                position: new google.maps.LatLng(latitude, longitude),
             });

            me_window.open(gMap);
        }

        function markEvents(latitude, longitude, event_name)
        {
              var temp_latlng = new google.maps.LatLng(latitude, longitude);
              marker = new google.maps.Marker({
                  position: temp_latlng,
                  map: gMap,
                  title: event_name
              });

              markers.push(marker) 
        }

        function clearMarkers()
        {
            for (var i = 0; i < markers.length; i++) {
              markers[i].setMap(null);
          }
        }

        function eventHTML(event_id, creator_id, xmlhttp)
        {
                              //token=6OLjbvZ86MX4A2Y/hgcpG612KNRddl8wKsvKU7gEuKaRb0j/OHXofvGP2hLsxWe7BhEVicgdEqNxqHjCpFkXQ"

          var append_to="";
          var current_name = '<%= current_user.name %>';
          var current_id = <%= current_user.id %>
          var alreadyGoing = attendances.indexOf(event_id);

          if (current_id==creator_id || current_name=="admin")
          {
            append_to =  '<a data-confirm="Are you sure?" rel="nofollow"' +
                        'data-method="delete" href="/events/'+event_id+
                        '">Cancel Event</a> | '+
                        '<a href="/events/'+event_id+
                        '">Show</a> | ' +
                        '<a href="/events/'+event_id+
                        '/edit">Edit</a>'
          }
          else if (alreadyGoing < 0)
          {
            append_to = '<a data-method="put" href="/events/signup?event_id='+event_id+'&user_id='+current_id+
                        '&whatAction=1">Sign up!</a> | '+'<a href="/events/'+event_id+
                        '">Show</a>'
          }
          else if (alreadyGoing >= 0)
          {
            append_to = '<a data-method="put" href="/events/signup?event_id='+event_id+'&user_id='+current_id+
                        '&whatAction=0">I Don\'t Want To Go</a> | '+'<a href="/events/'+event_id+
                        '">Show</a>'
          }

          return append_to+' | <span onclick="OpenWindow(&quot;' +
                    JSON.parse(xmlhttp.responseText)[i]["latitude"].toString() + '+' +
                    JSON.parse(xmlhttp.responseText)[i]["longitude"].toString() + '+' +
                    JSON.parse(xmlhttp.responseText)[i]["description"] + '&quot, &quot;desc&quot;)"' +
                  'style="cursor: pointer"><b><font color="blue">' +
                    JSON.parse(xmlhttp.responseText)[i]["name"] + '</b></font></span>'

        }


       
          function OpenWindow(event_info, type)
          {
  
              var info=event_info.split("+")
              var lat=Number(info[0])
              var lng=Number(info[1])
              var desc=info[2]
              if (desc_window != null)
              {
                desc_window.close()
              }

              desc_window = new google.maps.InfoWindow({
                    content: desc,
                    position: new google.maps.LatLng(lat, lng)
                 });
               desc_window.open(gMap);
               windows.push(desc_window)
           
          }

          function clearWindows()
          { 
              for (var i=0; i<windows.length; i++)
              {
                windows[i].close()
              }
          }



    </script>

<body><style>
#content {
  margin-left:  30%;
  padding: 4px ;

}
#menuwrapper {
  float: left;
  width: 30%;
  padding: 4px ;

}
</style>
<div id="container">
 <div id="menuwrapper">
    <ul>
        <li onclick="loadXMLDoc('location')"><a href="#">NEAR ME</a></li>
        <li onclick="loadXMLDoc('time')"><a href="#">HAPPENING SOON</a></li>
        <li onclick="loadXMLDoc('user')"><a href="#">CREATED BY ME</a></li>
        <li><a href="#">TAGS</a>
            <ul>
                <li onclick="tag='academic'; loadXMLDoc('tag')"><a href="#">Academic</a></li>
                <li onclick="tag='competition'; loadXMLDoc('tag')"><a href="#">Competition</a></li>
                <li onclick="tag='entertainment'; loadXMLDoc('tag')"><a href="#">Entertainment</a></li>
                <li onclick="tag='food'; loadXMLDoc('tag')"><a href="#">Food</a></li>
                <li onclick="tag='game'; loadXMLDoc('tag')"><a href="#">Game</a></li>
                <li onclick="tag='off-campus'; loadXMLDoc('tag')"><a href="#">Off-Campus</a></li>
                <li onclick="tag='music'; loadXMLDoc('tag')"><a href="#">Music</a></li>
                <li onclick="tag='party'; loadXMLDoc('tag')"><a href="#">Party</a></li>
                <li onclick="tag='sports'; loadXMLDoc('tag')"><a href="#">Sports</a></li>
            </ul>
        </li>
    </ul>
    <div id="below_menu">
    </div>
</div>
  <div id="content">  <div id="map_canvas" style="width: 800px; height: 400px"></div>

</div>
</div>


<div id="locationDiv" style="visibility:hidden"></div>
 


<%= link_to 'New Event', new_event_path %>
<%= link_to 'Back', root_path %>
</body>
</html>
