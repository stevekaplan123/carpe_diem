<div class="container">
<style>

body {
    font-family:Arial;
    font-size:12px;
}

#content {

  padding: 4px ;
  z-index: -1;
}


#menuwrapper {
  float: left;
  width: 50%;
  padding: 4px ;

}

#search-and-map {
  float: right;
  width: 50%;
  padding: 4px ;

}

#nav-search{
  padding:6px;
}

#nav-rec{
  padding:6px;
  padding-top:30px;
  padding-bottom:30px;
}



/*get all filter buttons in the same row*/
#filter_buttons li{
  font-size: 1.15em;
  display: inline;
}

.event_box {
  margin-left: 3%;
  margin-right: 3%;
  background-color: ghostwhite;

}

.event_box:hover
{
  background-color: khaki;
}


#lower-group {
  height: 600px;
  overflow: scroll;
}



/* Clear float */
.clear{
    clear:both;
}


#tab-area{
  height:150px;
}



</style>


<script type='text/javascript' src="https://maps.googleapis.com/maps/api/js?sensor=false"></script>
    <script type='text/javascript'>
        //the following function causes page to refresh
        (function()
        {
          if( window.localStorage )
          {
            if( !localStorage.getItem( 'firstLoad' ) )
            {
              localStorage[ 'firstLoad' ] = true;
              window.location.reload()
            }
            else
              localStorage.removeItem( 'firstLoad' );
          }
        })();

        var rad=5;
        var gMap = null;
        var attendance_window = null;
        var desc_window = null;
        var markers = [];
        var me_window =  null;
        var me_marker = null
        var loc = null;
        var windows = [];
        var tag = null;
        var attendances = []
        var count=0
        var curr_zoom = 0
        var curr_event_name = ""
        var search = true


        var locationReq = "0";
        var timeReq = "0";
        var otherReq = "0";
        var tagsReq = "0"
        var display_total_desc = new Object()
        var display_total_att = new Object()
        var ne;
        var sw;

        var recommendationReq = false;
        
        window.onload = function(){
            locationReq = checkCookies("loc")
            timeReq = checkCookies("time")
            otherReq = checkCookies("other")
            tagsReq = checkCookies("tags")
            curr_zoom = 15
            var myOptions = {
                center: new google.maps.LatLng(42.3654347, -71.258595),
                zoom: curr_zoom,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            gMap = new google.maps.Map(document.getElementById('map_canvas'), myOptions);

            loadAttendances()

            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(success, error);

            } else {
                error();
            }

            hide_and_seek_menus()

       }

       function hide_and_seek_menus()
       {
          count += 1
          var ULs = document.getElementsByClassName("menu");
          for (var i=0; i<ULs.length; i++)
          {
            if (count % 2 == 0)
            {
                ULs[i].style.visibility = "visible";
            }
            else
            {
                ULs[i].style.visibility = "hidden";
            }

          }
       }


       function convertTagsFromNumbersIntoWords(tags)
       {
          if (tags == "0")
            { return "0" }
          tags = tags.replace("1", " Academic")
          tags = tags.replace("2", " Competition")
          tags = tags.replace("3", " Entertainment")
          tags = tags.replace("4", " Food")
          tags = tags.replace("5", " Game")
          tags = tags.replace("6", " Off-Campus")
          tags = tags.replace("7", " Music")
          tags = tags.replace("8", " Party")
          tags = tags.replace("9", " Sports")
          return tags
       }

        function loadXMLDoc(locArg, timeArg, otherArg, tagsArg, recommendationArg) {          
          if (loc=="error") //if loc error and no value set on map
          {
              alert("In order to see events near you, either allow geolocation on your browser or select your position on the map.")
          }
          //first just gets the right xmlhttp based on browser
            var xmlhttp = loadXMLHTTP()
            //each time state changes, from 0 to 1 to 2 to 3 to 4, check if it finished (finished means state of 4)
            //and check status is 200, if status != 200, then the server failed to respond correctly (404 or 500)
            xmlhttp.onreadystatechange=function()
            {
              if (xmlhttp.readyState==4 && xmlhttp.status==200)
              {
                clearMarkers()        //first clear old event markers and clear out table of events
                clearWindows()
                 rad = 5
                 loc = document.getElementById("locationDiv").innerHTML.split(", ")
                 var latitude = loc[0]
                 var longitude = loc[1]
                 markMe(latitude, longitude)
                curr_zoom = 15            //reset zoom and center to brandeis campus
                gMap.setZoom(curr_zoom)
                gMap.setCenter(new google.maps.LatLng(42.3654347, -71.258595))
                //clear out the old list of events
                document.getElementById("below_menu").innerHTML = ""
                document.getElementById("events_msg").innerHTML = filteredHTMLTitle(locArg, timeArg, otherArg, tagsArg)
                  //now show the filtered events
                result = JSON.parse(xmlhttp.responseText);

                length = result.length;
                if (length==0)
                {
                   document.getElementById("below_menu").innerHTML += "<h4><i>[NO RESULTS]</i></h4>"

                }
                for (i=0; i<length; i++)
                {
                      latitude=JSON.parse(xmlhttp.responseText)[i]["latitude"];
                      longitude=JSON.parse(xmlhttp.responseText)[i]["longitude"];
                      var event_id = JSON.parse(xmlhttp.responseText)[i]["id"].toString();
                      var event_name=JSON.parse(xmlhttp.responseText)[i]["name"];
                      var event_time=JSON.parse(xmlhttp.responseText)[i]["time_occurrence"]
                      var creator_id=JSON.parse(xmlhttp.responseText)[i]["creator_id"];
                      var description = JSON.parse(xmlhttp.responseText)[i]["description"]
                      var attendees = JSON.parse(xmlhttp.responseText)[i]["attendees"]
                      var event_tags = JSON.parse(xmlhttp.responseText)[i]["tags"]
                      event_tags = convertTagsFromNumbersIntoWords(event_tags);
                      event_time = makeRailsDateReadable(event_time)
                      var event_str = event_name.split(" ")[0]+event_id
                      if (display_total_desc[event_str] == null)
                      {
                         display_total_desc[event_str] = false;  //by default, dont display description beyond 50 words
                      }
                      if (display_total_att[event_str] == null)
                      {
                         display_total_att[event_str] = false;  //by default, dont display description beyond 50 words
                      }
                      makeItFit(latitude, longitude) //zoom out if necessary to have all events on map
                      markEvents(latitude, longitude, event_name) //mark events on map that were result of filtering by 'type'
                      document.getElementById("below_menu").innerHTML += eventHTML(event_id, event_name, event_tags, creator_id, attendees, description, event_time, latitude, longitude)
                    }

              }
            } 
          searchValue = document.getElementById("search_box").value
          xmlhttp.open("GET","/events/filter.json?location="+loc+"&near_me="+locArg+"&other="+otherArg+"&time="+timeArg+
            "&tags="+tagsArg+"&search="+search+"&searchValue="+searchValue+"&recommend="+recommendationArg,true);
          xmlhttp.send();
        }

        function makeRailsDateReadable(event_time)
        {
               var readable_time = ""
               event_time = event_time.replace(":59.000-04:00","")
               event_time = event_time.replace("T", " ")
               var date = event_time.split(" ")[0]
               var time = event_time.split(" ")[1]
               date = date.replace("-", "/")
               date = date.replace("-", "/")
               var js_date = new Date(Date.parse(date))
               var today = new Date()
               var hour = Number(time.split(":")[0]) + 4
               var min = time.split(":")[1]
               if (hour == 12)
               {
                   readable_time = readable_time + hour + ":" + min + " noon"
               }
               else if (hour == 24)
               {
                   readable_time = readable_time + hour + ":" + min + "midnight"
               }
               else if (hour < 12)
               {
                    readable_time = readable_time + hour + ":" + min + " A.M."
               }
               else if (hour > 12)
               {
                    readable_time = readable_time + ((Number(hour) - 12).toString()) + ":" + min + " P.M."
               }
               if (js_date.getDate() != today.getDate())
               {
                  readable_time = readable_time + " tomorrow"
               }
               else if (js_date.getDate() == today.getDate())
               {
                  readable_time = readable_time + " today"
               }
               return readable_time
        }

        function makeItFit(lat, lng)
        {
            var bounds = gMap.getBounds();
            ne = bounds.getNorthEast(); // LatLng of the north-east corner 73, 180
            sw = bounds.getSouthWest(); // LatLng of the south-west corder -85, -180
            //var nw = new google.maps.LatLng(ne.lat(), sw.lng());
           // var se = new google.maps.LatLng(sw.lat(), ne.lng());
            if (ne.lat() >= lat && sw.lat() <= lat && ne.lng() >= lng && sw.lng() <= lng)
            {
              return true;
            }
            else
            {
              loc = document.getElementById("locationDiv").innerHTML.split(", ")
              var my_lat = loc[0]
              var my_lng = loc[1]
              rad = rad*4
              markMe(my_lat, my_lng)


              curr_zoom = curr_zoom - 2;
              gMap.setZoom(curr_zoom)
              makeItFit(lat, lng)
            }
        }

       function getCookie(cname) {
            var name = cname + "=";
            var ca = document.cookie.split(';');
            for(var i=ca.length-1; i>=0; i--) {
                var c = ca[i];
                while (c.charAt(0)==' ') c = c.substring(1);
                if (c.indexOf(name) == 0) {
                    return c.substring(name.length, c.length);
                }
            }
        }

        function setCookie(cname,cvalue,exdays) {
            var d = new Date();
            d.setTime(d.getTime() + (exdays*24*60*60*1000));
            var expires = "expires=" + d.toGMTString();
            document.cookie = cname+"="+cvalue+"; "+expires;
        }

        function checkCookies(type) {
          uid = '<%= current_user.id %>'
          if (type == "other")
          {
             var friends_pref = getCookie(uid+"carpe_diem_preferences_other");
             if (friends_pref != "" && friends_pref != null)
             {
                return friends_pref
             }
          }
          else if (type == "loc")
          {
             var loc_pref = getCookie(uid+"carpe_diem_preferences_loc");
             if (loc_pref != "" && loc_pref != null)
             {
                return loc_pref
             }
          }
          else if (type == "time")
          {
             var time_pref = getCookie(uid+"carpe_diem_preferences_time");
             if (time_pref != "" && time_pref != null)
             {
                return time_pref
             }
          }
          else if (type == "tags")
          {
             var tag_pref = getCookie(uid+"carpe_diem_preferences_tags");
             if (tag_pref != "" && tag_pref != null)
             {
                return tag_pref
             }
          }
          else
          {
             return 0;
          }

          return 0;

      }

      function setFilterArgs(type, arg) {
        resetRecommendationFlag()
        uid = '<%= current_user.id %>'
        setCookie(uid+"carpe_diem_preferences_"+type, arg, 30)
        if(type=="loc"){
          locationReq = arg;
        }
        else if(type=="time") {
          timeReq = arg;
        }
        else if(type=="other") {
          otherReq = arg;
        }
        else if(type=="tags") {
          tagsReq = arg;
        }
        else {
          otherReq = "0";
        }
      }


      function sendFilterArgs(searchBool) {
        search = searchBool
        document.getElementById("status").innerHTML = ""
        loadXMLDoc(locationReq, timeReq, otherReq, tagsReq, recommendationReq);
      }

        function getTimeTxt(timeMsg)
        {
          var timeTxt=""
          if (timeMsg=="30")
          {
            timeTxt="Happening In Less Than 30 Minutes"
          }
          else if (timeMsg!="0")
          {
            timeTxt = "Happening In Less Than "+timeMsg+" Hour(s)"
          }
          return timeTxt;
        }

        function getOtherTxt(otherMsg)
        {
              var msg=""
              if (otherMsg=="0") {
                msg=""
              }
              else if (otherMsg=="going_to"){
                msg="My Friends Are Going To"
              }      
              else if (otherMsg=="created") {
                msg="My Friends Created"
              }
              else if (otherMsg=="i_created")
              {
                msg="I Created"
              }
              else if (otherMsg=="im_going")
              {
                msg="I'm Going To"
              }
              return msg;
        }

        function getLocTxt(locMsg)
        {
          var locTxt=""
          if (locMsg=="250")
          {
              locTxt = "Within a 3 Minute Walk (250m)"
          }
          else if (locMsg=="750")
          {
              locTxt = "Within a 10 Minute Walk (750m)"
          }
          else if (locMsg=="1500")
          {
              locTxt = "Within a 20 Minute Walk (1500m)"
          }
          else if (locMsg=="3000")
          {
              locTxt = "Within a 40 Minute Walk (3000m)"
          }
          return locTxt
        }

        function getTagsTxt(tagsMsg)
        {
          var tagsTxt = ""
          tagsTxt = convertTagsFromNumbersIntoWords(tagsMsg)
          return tagsTxt;
          

        }

      function filteredHTMLTitle(locMsg, timeMsg, otherMsg, tagsMsg){

        var timeTxt=getTimeTxt(timeMsg)
        var locTxt=getLocTxt(locMsg)
        var otherTxt=getOtherTxt(otherMsg)
        var tagsTxt=getTagsTxt(tagsMsg)
        var msg=""

        if (locTxt != "" || timeTxt != "")
        { msg = "Viewing Events "+" "+locTxt+" "+timeTxt;}
        else { msg = "Viewing All Events"; }
        if (otherTxt != "")   { msg = msg + " That "+otherTxt;}
        if (tagsTxt != "0") { msg = msg + " In the Category of "+tagsTxt;}
        return '<span align="center"><h5>'+msg+'</h5></span>';
      }


        function hide_menus()
        {
          var ULs = document.getElementsByClassName("dropdown-menu");
          for (var i=0; i<ULs.length; i++)
          {
                ULs[i].style.visibility = "hidden";
          }
        }



      function success(position) {
         document.getElementById("locationDiv").innerHTML = position.coords.latitude + ", " + position.coords.longitude;
         loc = document.getElementById("locationDiv").innerHTML.split(", ")
         tag = ""
         var latitude = loc[0]
         var longitude = loc[1]
         rad=5
         markMe(latitude, longitude)
         loadXMLDoc(locationReq, timeReq, otherReq, tagsReq, "true", recommendationReq)  //use default params
         }


         function error() {
            document.getElementById("locationDiv").innerHTML = "error"
            loc = "error"

          //user needs to be able to click on map
          google.maps.event.addListener(gMap, 'click', function(event) {
              var lat = event.latLng.lat()
              var lng = event.latLng.lng()
              loc = lat.toString() + ", " + lng.toString()
              markMe(lat, lng)
          });
          rad=5
          loadXMLDoc("0", timeReq, otherReq, tagsReq, "true", recommendationReq)
       }


          function loadAttendances()
          {
            var event_id;
            <% current_user.attendances.each do |attending| %>
                 event_id = '<%= attending['event_id'] %>'
                 attendances.push(event_id)
            <% end %>
          }


          function loadXMLHTTP()
          {
            var xmlhttp;
             if (window.XMLHttpRequest)
                {// code for IE7+, Firefox, Chrome, Opera, Safari
                xmlhttp=new XMLHttpRequest();
                }
              else
                {// code for IE6, IE5
                xmlhttp=new hoverXObject("Microsoft.XMLHTTP");
                }
            return xmlhttp;
          }

        function markMe(latitude, longitude)
        {          
            var temp_latlng = new google.maps.LatLng(latitude, longitude);
            me_marker = new google.maps.Marker({
                position: temp_latlng,
                map: gMap,
                title: "You are here!",
                icon: "<%= asset_path( 'TrackingDot.png' ) %>"
            });
        }


        function markEvents(latitude, longitude, event_name)
        {
            var temp_latlng = new google.maps.LatLng(latitude, longitude);
            marker = new google.maps.Marker({
                position: temp_latlng,
                map: gMap,
                title: event_name
            });
            markers.push(marker) 
            var curr_length = markers.length
             google.maps.event.addListener(marker, 'click', function() {
                 // document.getElementById(markers[curr_length-1].title).style.backgroundColor = "lightsteelblue"
              });
        }



          function clearMarkers()
          {
              for (var i = 0; i < markers.length; i++) {
                markers[i].setMap(null);
            }
          }


          function onlyAllow15Words(event_name, event_id, txt)
          {
              txt_array = txt.split(" ")
              event_str = event_name.split(" ")[0]+event_id
              if (txt_array.length > 15)
              {
                 if (display_total_desc[event_str] == false)   //check here whether this event should display its entire description or not based on hash display_total_desc; default is false
                 {
                    var show_txt = ""
                    var hidden_txt = ""
                    for (var i=0; i<15; i++)
                    {
                      show_txt = show_txt + txt_array[i] + " "
                    }
                    curr_event_name = event_name
                    show_txt = show_txt + ' <a style="cursor: pointer" id=&quot;'+event_str+'&quot; onclick="setDescDisplay(this.id, true)"><b>(...)</b></a>'
                    return show_txt;
                  }
                  else
                  {
                    curr_event_name = event_name
                    txt = txt + ' <a style="cursor: pointer" id=&quot;'+event_str+'&quot; onclick="setDescDisplay(this.id, false)"><b>(Collapse Description)</b></a> '
                  }
              }
              else
              {
                return txt;
              }
              return txt
          }

          

        function setDescDisplay(name, val)
        {
          name = name.replace("\"", "")
          name = name.replace("\"", "")
          display_total_desc[name] = val
          sendFilterArgs(search)
        }

        function convertNamesIntoLinks(attendees)
        {
            attendance_html = ""
            att_array = attendees.split(", ")
            for (var i=0; i<att_array.length; i++)
            {
              user_id = att_array[i].split(":")[0]
              user_name = att_array[i].split(":")[1]
              url = "/users/"+user_id
              attendance_html += '<a href='+url+'>'+user_name+'</a>, '
            }
            attendance_html = attendance_html.slice(0,attendance_html.length-2); //chop off the last comma and space
            return attendance_html;
        }

        function eventHTML(event_id, event_name, event_tags,creator_id, attendees, description, event_time, latitude, longitude)
          {
            attendees = convertNamesIntoLinks(attendees)
            var append_to="";  
            var current_name = '<%= current_user.name %>';
            var current_id = <%= current_user.id %>
            var alreadyGoing = attendances.indexOf(event_id);
            if (current_id==creator_id || current_name=="admin")
            {
              append_to =  '<div align="right"><a style="font-size:x-small" data-confirm="Are you sure?" rel="nofollow"' +
                          'data-method="delete" href="/events/'+event_id+
                          '">Cancel Event</a> | ' +
                          '<a style="font-size:x-small" href="/events/'+event_id+
                          '/edit">Edit</a>'
            }
            else if (alreadyGoing < 0)
            {
              append_to = '<div align="right"><a style="font-size:x-small;" data-method="put" href="/events/signup?event_id='+event_id+'&user_id='+current_id+'&whatAction=1">Sign up!</a>'
            }
            else if (alreadyGoing >= 0)
            {
              append_to = '<div align="right"><a style="font-size:x-small" data-method="put" href="/events/signup?event_id='+event_id+'&user_id='+current_id+'&whatAction=0">I Don\'t Want To Go</a>'
            }

            append_to = append_to + ' | <b><u><font color="blue"><span onclick="OpenWindow(&quot;' +
                      latitude + '+' +
                      longitude + '+' +
                      event_name + '&quot)"' +
                    'style="cursor: pointer">View Event On Map</span></b></u></div>'
            description = onlyAllow15Words(event_name, event_id, description)
            if (event_tags.length == 0)
            {
                return '<div id="'+event_name+'"class="event_box"> <h4><b>'+ event_name + '</b>  @ '+event_time+'<br></h4>'+description+'<br>'+'Attending: '+attendees+'<br>'+append_to 
                      '</div>'
            }
            else
            {
                return '<div id="'+event_name+'"class="event_box"> <h4><b>'+ event_name + '</b>  @ '+event_time+'<br></h4>'+description+'<br>'+'Attending: '+attendees+'<br>Tags: '+event_tags+'<br>'+append_to 
                      '</div>'
            }


          }

          function OpenWindow(event_info)
          {

              var info=event_info.split("+")
              var lat=Number(info[0])
              var lng=Number(info[1])
              var desc=info[2]
              if (desc_window != null)
              {
                desc_window.close()
              }

              desc_window = new google.maps.InfoWindow({
                    content: desc,
                    position: new google.maps.LatLng(lat, lng)
                 });
               desc_window.open(gMap);
               windows.push(desc_window)

          }

          function clearWindows()
          {
              for (var i=0; i<windows.length; i++)
              {
                windows[i].close()
              }
          }



          function setRecommendationFlag() {
            recommendationReq = true;
          }

          function resetRecommendationFlag() {
            recommendationReq = false;
          }



    </script>

<body>


<div id="container">


  <div id="menuwrapper">
    <h4><div id="status"><%= @status %></div></h4>
      <nav class="navbar navbar-default" id="lower-group">
      <div id="below_menu"></div>
      </nav>
  </div><!-- close #menuwrapper-->


  <div id="search-and-map">

      <div role="tabpanel" id="tab-area">
          <ul class="nav nav-tabs" role="tablist">
            <li role="presentation" class="active"><a href="#searchbox" aria-controls="searchbox" role="tab" data-toggle="tab">Search By Text</a></li>
            <li role="presentation"><a href="#categories" aria-controls="categories" role="tab" data-toggle="tab">Search By Category</a></li>
            <li role="presentation"><a href="#recommendations" aria-controls="recommendations" role="tab" data-toggle="tab">Recommended For Me</a></li>
          </ul>
          <div class="tab-content">


            <div role="tabpanel" class="tab-pane active" id="searchbox">
                  <div style="line-height:50%;"><br></div>


                    <nav class="navbar navbar-default", id="nav-search">
                      <br>
                      <input type="textbox" id="search_box"/>
                      <input type = "button" class="btn btn-primary btn-sm btn-block" value="Search!" onclick="resetRecommendationFlag(); sendFilterArgs('true')">
                    </nav>

            </div>



            <div role="tabpanel" class="tab-pane" id="categories">
                    <div style="line-height:50%;"><br></div>


                          <nav class="navbar navbar-default">

                            <div id="content">
                              <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1"><div id="events_msg"></div>
                                <span>   <ul class="nav navbar-nav" id="filter_buttons">
    <li class="dropdown">
        <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"><u><button type="button" class="btn btn-primary">Where<span class="caret"></span>
</button></u>
        </a>
        <ul class="dropdown-menu" role="menu">
            <li onclick="setFilterArgs('loc', '0'); sendFilterArgs('false')"><a href="#">Anywhere</a></li>
            <li onclick="setFilterArgs('loc', '250'); sendFilterArgs('false')"><a href="#">250m (3 min walk)</a></li>
            <li onclick="setFilterArgs('loc', '750'); sendFilterArgs('false')"><a href="#">750m (10 min walk)</a></li>
            <li onclick="setFilterArgs('loc', '1500'); sendFilterArgs('false')"><a href="#">1500m (20 min walk)</a></li>
            <li onclick="setFilterArgs('loc', '3000'); sendFilterArgs('false')"><a href="#">3000m (40 min walk)</a></li>
        </ul>
       </li>


       <li class="dropdown">
        <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"><u><button type="button" class="btn btn-primary">When<span class="caret"></span>
</button></u>
        </a>
        <ul class="dropdown-menu" role="menu">
          <li onclick="setFilterArgs('time', '0'); sendFilterArgs('false')"><a href="#">Anytime</a></li>
          <li onclick="setFilterArgs('time', '30'); sendFilterArgs('false')"><a href="#">Within 30 mins</a></li>
          <li onclick="setFilterArgs('time', '1'); sendFilterArgs('false')"><a href="#">Within 1 hour</a></li>
          <li onclick="setFilterArgs('time', '2'); sendFilterArgs('false')"><a href="#">Within 2 hours</a></li>
          <li onclick="setFilterArgs('time', '5'); sendFilterArgs('false')"><a href="#">Within 5 hours</a></li>
        </ul>
       </li>   


         <li class="dropdown">
          <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"><u><button type="button" class="btn btn-primary">Tags<span class="caret"></span></button></u>
            
          </a>
          <ul class="dropdown-menu" role="menu">
            <li onclick="setFilterArgs('tags', '0'); sendFilterArgs('false')"><a href="#">Any Tags</a></li>
            <li onclick="setFilterArgs('tags', '1'); sendFilterArgs('false')"><a href="#">Academic</a></li>
            <li onclick="setFilterArgs('tags', '2'); sendFilterArgs('false')"><a href="#">Competition</a></li>
            <li onclick="setFilterArgs('tags', '3'); sendFilterArgs('false')"><a href="#">Entertainment</a></li>
            <li onclick="setFilterArgs('tags', '4'); sendFilterArgs('false')"><a href="#">Food</a></li>
            <li onclick="setFilterArgs('tags', '5'); sendFilterArgs('false')"><a href="#">Game</a></li>
             <li onclick="setFilterArgs('tags', '6'); sendFilterArgs('false')"><a href="#">Off-Campus</a></li>
            <li onclick="setFilterArgs('tags', '7'); sendFilterArgs('false')"><a href="#">Music</a></li>
             <li onclick="setFilterArgs('tags', '8'); sendFilterArgs('false')"><a href="#">Party</a></li>
             <li onclick="setFilterArgs('tags', '9'); sendFilterArgs('false')"><a href="#">Sports</a></li>
          </ul>
       </li>

       <li class="dropdown">
          <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"><u><button type="button" class="btn btn-primary">Other Options <span class="caret"></span></button></u>
           
          </a>
          <ul class="dropdown-menu" role="menu">
            <li onclick="setFilterArgs('other', '0'); sendFilterArgs('false')"><a href="#">Anyone's Going</a></li>
            <li onclick="setFilterArgs('other', 'i_created'); sendFilterArgs('false')"><a href="#">Events I created</a></li>
            <li onclick="setFilterArgs('other', 'im_going'); sendFilterArgs('false')"><a href="#">Events I'm going to</a></li>
            <li onclick="setFilterArgs('other', 'going_to'); sendFilterArgs('false')"><a href="#">Events my friends are going to</a></li>
            <li onclick="setFilterArgs('other', 'created'); sendFilterArgs('false')"><a href="#">Events my friends made</a></li>
 
          </ul>
       </li>

     </span>
                          </nav>


              </div>

              <div role="tabpanel" class="tab-pane" id="recommendations"  align="center">
                <div style="line-height:50%;"><br></div>
                <nav class="navbar navbar-default" id="nav-rec">
                  <button type="button" class="btn btn-primary" onclick="setRecommendationFlag(); sendFilterArgs('false');">Find Recommendations!
                  </button>
                </nav>


              </div>

          </div> <!-- #tab-content-->
      </div> <!-- #tab-area-->

       <br>

      <nav>
        <nav class="navbar navbar-default" id="map-group2">
          <div id="map_canvas" style="width: 560px; height: 440px"></div>
        </nav>
      </nav>

  </div> <!-- #search-and-map-->


</div> <!-- #container-->



<div id="locationDiv" style="visibility:hidden"></div>

</body>
</html>
</div>
